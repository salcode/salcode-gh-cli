# What protocol to use when performing git operations. Supported values: ssh, https
git_protocol: https
# What editor gh should run when creating issues, pull requests, etc. If blank, will refer to environment.
editor:
# When to interactively prompt. This is a global config that cannot be overridden by hostname. Supported values: enabled, disabled
prompt: enabled
# A pager program to send command output to, e.g. "less". Set the value to "cat" to disable the pager.
pager:
# Aliases allow you to create nicknames for gh commands
aliases:
    co: pr checkout
    # gh redeliver <webhook payload URL>
    #
    # Locate the most recent delivery sent
    # to the given webhook payload URL that
    # "closed" a "pull_request"
    # and redeliver that webhook delivery.
    #
    # @param $1 The webhook Payload URL set in GitHub (e.g. https://example.com/dev/hook)
    #
    # e.g. gh redeliver https://example.com/dev/hook
    redeliver: "!ARG=$1; f() { \
      echo \"Redelivering webhook for PR $ARG\"; \
      WEBHOOK_ID=$(gh api /repos/{owner}/{repo}/hooks | jq --arg webhook_url \"$ARG\" '.[] | select(.config.url==$webhook_url) | .id'); \
      DELIVERY_ID=$(gh api /repos/{owner}/{repo}/hooks/$WEBHOOK_ID/deliveries --jq 'map(select(.event==\"pull_request\")) | map(select(.action==\"closed\")) | first | .id'); \
      echo \"$DELIVERY_ID\"; \
      gh api \"/repos/{owner}/{repo}/hooks/$WEBHOOK_ID/deliveries/$DELIVERY_ID\" --jq '\"Redelivering webhook delivery for PR \\(.request.payload.number) merged into \\(.request.payload.pull_request.base.ref) \\(.request.payload.action)\"'; \
      gh api --method POST /repos/{owner}/{repo}/hooks/$WEBHOOK_ID/deliveries/$DELIVERY_ID/attempts;
    }; f"

# The path to a unix socket through which send HTTP connections. If blank, HTTP traffic will be handled by net/http.DefaultTransport.
http_unix_socket:
